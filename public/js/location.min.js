var x = document.getElementById("locdatadiv"); function getDistanceFromLatLonInKm(o, t, a, e) { var i = deg2rad(a - o), n = deg2rad(e - t), r = Math.sin(i / 2) * Math.sin(i / 2) + Math.cos(deg2rad(o)) * Math.cos(deg2rad(a)) * Math.sin(n / 2) * Math.sin(n / 2); return 6371 * (2 * Math.atan2(Math.sqrt(r), Math.sqrt(1 - r))) } function deg2rad(o) { return o * (Math.PI / 180) } function getLocation() { navigator.geolocation ? navigator.geolocation.getCurrentPosition(showPosition, showError) : x.innerHTML = "Geolocation is not supported by this browser." } function showPosition(o) { var t = []; for (i = 0; i < locdatai.length; i++)t.push(getDistanceFromLatLonInKm(o.coords.latitude, o.coords.longitude, locdatai[i].Lat, locdatai[i]["Long-"])); var a = t.indexOf(Math.min(...t)); "N/A" == locdatai[a].Deaths.toLocaleString() & "N/A" == locdatai[a].Recovered.toLocaleString() & "N/A" == locdatai[a].Active.toLocaleString() ? x.innerHTML = "Your Location: " + locdatai[a]["Combined-Key"] + " Confirmed: " + locdatai[a].Confirmed.toLocaleString() : x.innerHTML = "Your Location: " + locdatai[a]["Combined-Key"] + " Confirmed: " + locdatai[a].Confirmed.toLocaleString() + "; Deaths: " + locdatai[a].Deaths.toLocaleString() + "; Recovered: " + locdatai[a].Recovered.toLocaleString() + "; Active: " + locdatai[a].Active.toLocaleString() } function showError(o) { switch (o.code) { case o.PERMISSION_DENIED: x.innerHTML = "User denied the request for Geolocation."; break; case o.POSITION_UNAVAILABLE: x.innerHTML = "Location information is unavailable."; break; case o.TIMEOUT: x.innerHTML = "The request to get user location timed out."; break; case o.UNKNOWN_ERROR: x.innerHTML = "An unknown error occurred." } } getLocation();